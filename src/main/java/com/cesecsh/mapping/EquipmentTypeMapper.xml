<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cesecsh.service.EquipmentTypeService" >
  
  <resultMap id="equipmentTypeResultMap" type="com.cesecsh.model.EquipmentType" >
    <id column="equipment_type_id" property="equipmentTypeId" jdbcType="VARCHAR" />
    <result column="equipment_type_name" property="equipmentTypeName" jdbcType="VARCHAR" />
    <result column="equipment_type_code" property="equipmentTypeCode" jdbcType="VARCHAR" />
  </resultMap>
 
  <sql id="columns" >
    equipment_type_id, equipment_type_name, equipment_type_code
  </sql>
   <sql id="table" >
  		cec_equipment_type
   </sql>

   <select id="select" resultMap="equipmentTypeResultMap">
	  	select 
	 		 <include refid="columns"></include>
	 	 from  <include refid="table"></include>
	 	 <where>
	 	 	<if test="_parameter!=null">
	 	 		equipment_type_id = #{_parameter} 
	 	 	</if>
	 	 </where>
	 	 order by equipment_type_id desc
  </select>
  
  <select id="selects" resultMap="equipmentTypeResultMap">
	  	select 
	 		 <include refid="columns"></include>
	 	 from 
	 	 <include refid="table"></include>
	 	  order by equipment_type_id desc
  </select>

  <insert id="insert">
	  	 insert into <include refid="table"></include> (
	  	 	<include refid="columns"></include>
	  	 )
		  values (#{equipmentTypeId},#{equipmentTypeName},#{equipmentTypeCode})
  </insert>
	
  <update id="update">
	  update <include refid="table"></include> set
	    equipment_type_name = #{equipmentTypeName},
	    equipment_type_code = #{equipmentTypeCode}
	  where equipment_type_id = #{equipmentTypeId}
  </update>
	
  <delete id="delete">
	  delete from <include refid="table"></include> where equipment_type_id = #{equipmentTypeId}
  </delete>
  
   <delete id="deletes">
	  delete from <include refid="table"></include> where equipment_type_id in
	   <foreach collection="array" index="columnIndex" item="id" open="(" close=")" separator=",">
	      		${id} 
	   </foreach>
	 
  </delete>
  
  
   <select id="selectByConditions" resultMap="equipmentTypeResultMap" parameterType="map">
   		select <include refid="columns"></include>
   		 from (
	  		select  <include refid="columns"></include>
			  	<if test="sortColumns!=null">
		       		,ROW_NUMBER() OVER( 
		       		order by
			      <foreach collection="sortColumns" index="columnIndex" item="column" separator=",">
			      		${column} ${sortFlag} 
			      </foreach>
		      		) ROW_ID
		      </if>
	  	
	  	 from <include refid="table"></include> T 
		  	<where>     
		        <if test="object.equipmentTypeName!=null">     
		           	T.equipment_type_name like CONCAT('%','${object.equipmentTypeName}','%')      
		        </if>     
		        <if test="object.equipmentTypeCode!=null">     
		           and T.equipment_type_code like CONCAT('%', '${object.equipmentTypeCode}','%')       
		        </if> 
	      </where> 
     	 ) T 
      <where>     
	        <if test="start!=null"> 
	       	  <![CDATA[  ROW_ID >${start} ]]>      
	        </if>  
	        <if test="end!=null"> 
	       	  <![CDATA[ and ROW_ID <=${end}]]>      
	        </if>  
      </where> 
 
  </select>
  
</mapper>